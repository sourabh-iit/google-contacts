{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/contacts/contacts.component.ts","./src/app/components/contacts/contacts.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/services/auth-guard.service.ts","./src/app/services/auth.interceptor.ts","./src/app/services/googleService.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { ContactsComponent } from './components/contacts/contacts.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/contacts', pathMatch: 'full'},\n  {\n    path: 'contacts',\n    component: ContactsComponent,\n    canActivate: [AuthGuardService]\n  },\n  {path: 'login', component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {\n  }\n\n  logout() {\n    this.userService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  isLoggedIn = this.userService.isLoggedIn;\n}\n","<!-- <div class=\"header\">\n    <h4>\n        <i class=\"fa fa-envelope\"></i> Chat Application\n    </h4>\n    <button (click)=\"logout()\" *ngIf=\"isLoggedIn()\" class=\"btn btn-danger btn-sm\">Logout</button>\n    <div *ngIf=\"!isLoggedIn()\">\n        <a class=\"btn btn-primary\" href=\"/login\">Login</a>\n        <a class=\"btn btn-secondary ml-2\" href=\"/register\">Register</a>\n    </div>\n</div> -->\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { UserService } from './services/user.service';\nimport { AuthInterceptor } from './services/auth.interceptor';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { ContactsComponent } from './components/contacts/contacts.component';\nimport { GoogleService } from './services/googleService';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ContactsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    UserService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    AuthGuardService,\n    GoogleService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnDestroy, NgZone } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { GoogleService } from 'src/app/services/googleService';\n\ndeclare const gapi: any;\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.scss']\n})\nexport class ContactsComponent implements OnDestroy {\n\n  public me: any;\n  private subs = new Subscription();\n  public contacts = [];\n\n  constructor(\n    public userService: UserService,\n    private router: Router,\n    private zone: NgZone,\n    private googleService: GoogleService\n  ) {\n    this.me = this.userService.user;\n    this.loadContacts();\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  logoutUser = () => {\n    this.userService.logout();\n    this.zone.run(() => this.router.navigateByUrl('/login'));\n  }\n\n  logout(): void {\n    gapi.load('auth2', () => {\n      const auth2 = gapi.auth2.getAuthInstance();\n      if (auth2 != null) {\n        auth2.signOut().then(this.logoutUser);\n      } else {\n        this.logoutUser();\n      }\n    });\n  }\n\n  loadContacts(): void {\n    this.googleService.loadContacts().subscribe((res) => {\n      this.contacts = res.contacts;\n      console.log(this.contacts);\n    });\n  }\n}\n","<div class=\"header\" *ngIf=\"userService.user\">\n  <div class=\"d-flex align-items-center\">\n    <img class=\"dp\" [src]=\"userService.user.googlePictureLink\" [alt]=\"userService.user.email\">\n    <div class=\"info\">\n      <div class=\"name\">{{me.name}}</div>\n      <div class=\"email\">{{me.email}}</div>\n    </div>\n  </div>\n  <img (click)=\"logout()\" class=\"c-pointer\" src=\"../../../assets/Logout.png\" alt=\"logout\">\n</div>\n","import { Component, OnInit, AfterViewInit, NgZone } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n\ndeclare const gapi: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements AfterViewInit {\n\n  public busy = false;\n  public auth2: any;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private zone: NgZone\n  ) {\n    if (userService.isLoggedIn()) {\n      router.navigateByUrl('/');\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.googleInit();\n  }\n\n  login(data): void {\n    this.busy = true;\n    this.userService.login(data).subscribe((res: any) => {\n      this.zone.run(() => this.router.navigate(['/']));\n    }, () => {\n      this.busy = false;\n    });\n  }\n\n  public googleInit(): void {\n    gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init({\n        client_id: '737715185635-6r9bbcbsa2d1hm4ok049iugrqjop6odb.apps.googleusercontent.com',\n        scope: 'profile email https://www.googleapis.com/auth/contacts.readonly',\n        redirect_uri: 'http://localhost:3000/google/callback'\n      });\n      this.attachSignIn(document.getElementById('googleBtn'));\n    });\n  }\n\n  public attachSignIn(element): void {\n    this.auth2.attachClickHandler(element, {},\n      (googleUser) => {\n        const data = googleUser.getAuthResponse();\n        this.login({\n          idToken: data.id_token,\n          accessToken: data.access_token\n        });\n      }, (error) => {\n    });\n  }\n\n}\n","<div class=\"main-container\">\n  <div class=\"login-container\">\n    <form #loginForm=\"ngForm\" class=\"login-form\">\n      <input type=\"email\" class=\"input\" placeholder=\"Email\">\n      <input type=\"password\" class=\"input\" placeholder=\"Password\">\n      <button type=\"button\" class=\"signin\">Sign In</button>\n    </form>\n    <div class=\"mt-4 mb-4 text-center\">OR</div>\n    <div class=\"google-login\">\n      <img src=\"../../../assets/google.png\" alt=\"google\">\n      <div class=\"mb-2 text-center\">Sign in with Google</div>\n      <div class=\"d-flex justify-content-center\">\n        <button class=\"btn btn-primary\" id=\"googleBtn\">Sign In</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(\n        public router: Router,\n        public userService: UserService\n    ) {}\n    canActivate(): boolean {\n        if(!this.userService.isLoggedIn()) {\n            this.router.navigate(['login']);\n            return false;\n        }\n        return true;\n    }\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let token;\n    try {\n      token = JSON.parse(localStorage.getItem('user')).token;\n    } catch (e) {\n      token = '';\n    }\n    req = req.clone({\n      setHeaders: {\n        'Content-Type' : 'application/json; charset=utf-8',\n        Accept       : 'application/json',\n        Authorization: `token ${token}`,\n      },\n    });\n\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class GoogleService {\n\n  private api = '/api/v1';\n\n  constructor(\n    private http: HttpClient\n  ) {\n\n  }\n\n  loadContacts(): Observable<any> {\n    const endPoint = `${this.api}/google/contacts`;\n    return this.http.get(endPoint);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class UserService {\n\n  private api = '/api/v1';\n\n  constructor(\n    private http: HttpClient\n  ) {\n\n  }\n\n  register(user: any): Observable<any> {\n    const endpoint = this.api + '/register';\n    return this.http.post(endpoint, user);\n  }\n\n  login(data: any): Observable<any> {\n    const endpoint = `${this.api}/login`;\n    return this.http.post(endpoint, data)\n    .pipe(tap((res: any) => localStorage.setItem('user', JSON.stringify({\n      user: res.user,\n      token: res.token\n    }))));\n  }\n\n  isLoggedIn(): boolean {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      if (user.token) {\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  getAuthUrl(): Observable<any> {\n    const endpoint = `${this.api}/authurl`;\n    return this.http.get(endpoint);\n  }\n\n  logout(): void {\n    localStorage.removeItem('user');\n  }\n\n  get user(): any {\n    try {\n      return JSON.parse(localStorage.getItem('user')).user;\n    } catch (e) {\n      return {};\n    }\n  }\n\n  get token(): string {\n    try {\n        return JSON.parse(localStorage.getItem('user')).token;\n    } catch (e) {\n        return '';\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}